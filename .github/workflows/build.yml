name: Build and Release

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ["1.23"]
        include:
          - os: ubuntu-latest
            output_name: devtools-linux-amd64
            goarch: amd64
          - os: macos-latest
            output_name: devtools-darwin-amd64
            goarch: amd64
          - os: macos-latest
            output_name: devtools-darwin-arm64
            goarch: arm64
          - os: windows-latest
            output_name: devtools-windows-amd64.exe
            goarch: amd64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: go mod download

      - name: Set build version
        id: version
        shell: bash
        run: |
          VERSION=${GITHUB_REF_NAME}
          if [[ "$VERSION" != v* ]]; then
            VERSION="dev-${GITHUB_SHA::7}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

      - name: Build
        env:
          GOARCH: ${{ matrix.goarch }}
        run: go build -v -ldflags "-X main.Version=${{ steps.version.outputs.VERSION }} -X main.BuildTime=${{ steps.version.outputs.BUILD_TIME }}" -o ${{ matrix.output_name }} .

      - name: Test
        run: go test -v ./...

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output_name }}
          path: ${{ matrix.output_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Generate release notes
          NOTES="## DevTools ${{ github.ref_name }}

          ### What's New
          - See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details

          ### Installation

          #### Quick Install (macOS)
          \`\`\`bash
          curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/install.sh | bash
          \`\`\`

          #### Manual Download
          Download the appropriate binary for your platform below.

          ### Author
          Created by Karthick
          - Email: karthick@gigcodes.com
          - Website: https://devkarti.com"

          gh release create "${{ github.ref_name }}" \
            --title "DevTools ${{ github.ref_name }}" \
            --notes "$NOTES" \
            --draft=false \
            --prerelease=false

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in ./artifacts/**/devtools-*; do
            asset_name=$(basename "$file")
            echo "Uploading $asset_name"
            gh release upload "${{ github.ref_name }}" "$file" --clobber
          done
